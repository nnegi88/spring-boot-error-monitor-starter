name: Deploy Snapshot

on:
  push:
    branches:
      - develop
    paths-ignore:
      - '**.md'
      - '.github/**'
      - '!.github/workflows/snapshot.yml'

jobs:
  deploy-snapshot:
    runs-on: ubuntu-latest
    if: |
      !contains(github.actor, '[bot]') &&
      !contains(github.event.head_commit.message, '[maven-release]')
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Check version is SNAPSHOT
      id: check_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        if [[ $VERSION == *"-SNAPSHOT" ]]; then
          echo "is_snapshot=true" >> $GITHUB_OUTPUT
        else
          echo "is_snapshot=false" >> $GITHUB_OUTPUT
        fi

    - name: Build and Test
      if: steps.check_version.outputs.is_snapshot == 'true'
      run: mvn clean verify -B

    - name: Deploy SNAPSHOT to OSSRH
      if: steps.check_version.outputs.is_snapshot == 'true'
      run: mvn deploy -B -DskipTests
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `âœ… SNAPSHOT version ${{ steps.check_version.outputs.version }} deployed to OSSRH Snapshots repository.
            
            To use this snapshot:
            \`\`\`xml
            <dependency>
                <groupId>io.github.nnegi88</groupId>
                <artifactId>spring-boot-error-monitor-starter</artifactId>
                <version>${{ steps.check_version.outputs.version }}</version>
            </dependency>
            
            <repositories>
                <repository>
                    <id>ossrh-snapshots</id>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
                    <snapshots>
                        <enabled>true</enabled>
                    </snapshots>
                </repository>
            </repositories>
            \`\`\``
          })