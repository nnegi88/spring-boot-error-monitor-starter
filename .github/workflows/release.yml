name: Release

on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: 'Release version'
        required: true
        type: string
      nextVersion:
        description: 'Next development version'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: central
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    - name: Configure Git
      run: |
        git config user.name "${{ github.actor }}"
        git config user.email "${{ github.actor }}@users.noreply.github.com"

    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Update version to release
      run: mvn versions:set -DnewVersion=${{ github.event.inputs.releaseVersion }} -B

    - name: Commit release version
      run: |
        git add pom.xml
        git commit -m "Release version ${{ github.event.inputs.releaseVersion }}"
        git tag -a v${{ github.event.inputs.releaseVersion }} -m "Release version ${{ github.event.inputs.releaseVersion }}"

    - name: Build and verify
      run: mvn clean verify -B

    - name: Deploy to Maven Central
      run: mvn deploy -P release -B
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

    - name: Update to next development version
      run: |
        mvn versions:set -DnewVersion=${{ github.event.inputs.nextVersion }} -B
        git add pom.xml
        git commit -m "Prepare for next development iteration"

    - name: Push changes
      run: |
        git push origin main
        git push origin v${{ github.event.inputs.releaseVersion }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.event.inputs.releaseVersion }}
        name: Release ${{ github.event.inputs.releaseVersion }}
        body: |
          ## What's Changed
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          
          ## Maven
          ```xml
          <dependency>
              <groupId>io.github.nnegi88</groupId>
              <artifactId>spring-boot-error-monitor-starter</artifactId>
              <version>${{ github.event.inputs.releaseVersion }}</version>
          </dependency>
          ```
        draft: false
        prerelease: false